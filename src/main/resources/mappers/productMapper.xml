<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.diary.product.dao.ProductDAO">
 
 	<!-- 쇼핑리스트 목록 불러오기 + 페이징 -->
 	<select id="selectProductList" parameterType="map" resultType="com.diary.product.model.Product">
 		SELECT
 			`id`
			,`userId`
			,`type`
			,`itemName`
			,`category`
			,`amount`
			,`purchasedCategory`
			,`purchased`
			,`map`
			,`size`
			,`color`
			,`datePurchased`
			,`returnableDeadline`
			,`usedHope`
			,`productImgPath`
			,`createdAt`
			,`updatedAt`
		FROM
			`product`
		WHERE
			`type` = "SHOPPING" AND
			`userId` = #{userId}
			
		<if test="keyword != null">
			AND `itemName` LIKE CONCAT('%',#{keyword},'%')
		</if>
		
		<choose>
			<when test="orderCategory == 'category-order'">
				ORDER BY `category` DESC
			</when>
			
			<when test="orderCategory == 'amount-order'">
				ORDER BY `amount` DESC
			</when>
			
			<when test="orderCategory == 'return-order'">
				ORDER BY `returnableDeadline` DESC
			</when>
			
			<when test="orderCategory == 'used-order'">
				ORDER BY `usedHope` DESC
			</when>
		</choose>
			
		<if test="direction == null and orderCategory == null">
			ORDER BY `id` DESC
		</if>
		
		<if test="direction == 'next'">
			<![CDATA[
			AND `id` <  #{standardId}
			]]>
		ORDER BY `id` DESC
 		</if>

 		<if test="direction == 'prev'">
 			<![CDATA[
			AND `id` >  #{standardId}
			]]>
 		</if>

 		LIMIT ${limit}
 	</select>
 	
 	<!-- 페이징 마지막 페이지 여부 -->
 	<select id="selectProductIdByUserIdSort" parameterType="map" resultType="int">
 		SELECT
 			`id`
 		FROM
 			`product`
 		WHERE
 			`type` = "SHOPPING" AND
 			`userId` = #{userId}
 		ORDER BY `id` ${sort}
 		LIMIT 1
 	</select>
 	
 	<!-- keyword검색시 POST_MAX_SIZE보다 작을 경우 -->
	<select id="keywordProductCount" parameterType="map" resultType="int">
 		SELECT
 			COUNT(*)
		FROM
			`product`
		WHERE
			`type` = "SHOPPING" AND
			`userId` = #{userId}
			<if test="keyword != null">
			AND `itemName` LIKE CONCAT('%',#{keyword},'%')
			</if>
 	</select>
 	
 	<!-- 글 게시 -->
 	<insert id="insertShoppingProduct" parameterType="com.diary.product.model.Product">
 		INSERT INTO `product`
 		(
			`userId`
			,`type`
			,`itemName`
			,`category`
			,`amount`
			,`purchasedCategory`
			,`purchased`
			,`map`
			,`size`
			,`color`
			,`datePurchased`
			,`returnableDeadline`
			,`usedHope`
			,`productImgPath`
			,`createdAt`
			,`updatedAt`
 		)
 		VALUES
 		(
 			#{userId}
 			,'SHOPPING'
 			,#{itemName}
 			,#{category}
 			,#{amount}
 			,#{purchasedCategory}
 			,#{purchased}
 			,#{map}
 			,#{size}
 			,#{color}
 			,#{datePurchased}
 			,#{returnableDeadline}
 			,#{usedHope}
 			,#{productImgPath}
 			,NOW()
 			,NOW()
 		)
 	</insert>
 	
 	<!-- 글 가져오기 -->
 	<select id="selectProductListByUserIdProductId" parameterType="map" resultType="com.diary.product.model.Product">
 		SELECT
 			`id`
			,`userId`
			,`type`
			,`itemName`
			,`category`
			,`amount`
			,`purchasedCategory`
			,`purchased`
			,`map`
			,`size`
			,`color`
			,`datePurchased`
			,`returnableDeadline`
			,`usedHope`
			,`productImgPath`
			,`createdAt`
			,`updatedAt`
		FROM
			`product`
		WHERE
			`type` = "SHOPPING" AND
			`userId` = #{userId} AND
			`id` = #{productId}
 	</select>
 	
 	<!-- 기존 글 가져오기 -->
 	<select id="selectProductByUserIdProductId" parameterType="map" resultType="com.diary.product.model.Product">
 		SELECT
 			`id`
			,`userId`
			,`type`
			,`itemName`
			,`category`
			,`amount`
			,`purchasedCategory`
			,`purchased`
			,`map`
			,`size`
			,`color`
			,`datePurchased`
			,`returnableDeadline`
			,`usedHope`
			,`productImgPath`
			,`createdAt`
			,`updatedAt`
		FROM
			`product`
		WHERE
			`type` = "SHOPPING" AND
			`userId` = #{userId} AND
			`id` = #{productId}
 	</select>
 	
 	<!-- shoppinglist글 수정하기 -->
 	<update id="updateShoppingList" parameterType="map">
 		UPDATE `product`
 		SET
 			`itemName` = #{itemName}
			,`category` = #{category}
			,`amount` = #{amount}
			,`size` = #{size}
			,`color` = #{color}
			,`datePurchased` = #{datePurchased}
			,`returnableDeadline` = #{returnableDeadline}
			,`usedHope` = #{usedHope}
			<if test="imgPath != null">
			,`productImgPath` = #{imgPath}
			</if>
			,`updatedAt` = NOW()
		WHERE
			`type` = "SHOPPING" 
			AND `id` = #{productId}
			AND `userId` = #{userId}
 			
 	</update>
 	
 	<!-- 해당 글 삭제 -->
 	<delete id="deletesProductByUserIdProductId" parameterType="map">
 		DELETE FROM `product`
 		WHERE
 			`userId` = #{userId}
 			AND `id` = #{productId}
 	</delete>
 	
 	<!-- 유저의 쇼핑목록 가져오기 -->
 	<select id="selectSProductListByUserId" resultType="com.diary.product.model.Product">
 		SELECT
 			`id`
			,`userId`
			,`type`
			,`itemName`
			,`category`
			,`amount`
			,`purchasedCategory`
			,`purchased`
			,`map`
			,`size`
			,`color`
			,`datePurchased`
			,`returnableDeadline`
			,`usedHope`
			,`productImgPath`
			,`createdAt`
			,`updatedAt`
		FROM
			`product`
		WHERE
			`type` = "SHOPPING"
			AND `userId` = #{userId}
 	</select>
 	
 	
 </mapper>